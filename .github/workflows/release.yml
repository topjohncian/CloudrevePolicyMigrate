name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          clean: false
          submodules: 'recursive'
      - run: |
          git fetch --prune --unshallow --tags
      - name: Get dependencies and build
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc-mingw-w64-x86-64
          sudo apt-get -y install gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
          sudo apt-get -y install gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          chmod +x ./build.sh
          ./build.sh
      - name: Upload binary files (windows_amd64)
        uses: actions/upload-artifact@v2
        with:
          name: cloudreve_policy_migrate_windows_amd64
          path: release/cloudreve_policy_migrate*windows_amd64.*

      - name: Upload binary files (linux_amd64)
        uses: actions/upload-artifact@v2
        with:
          name: cloudreve_policy_migrate_linux_amd64
          path: release/cloudreve_policy_migrate*linux_amd64.*

      - name: Upload binary files (linux_arm)
        uses: actions/upload-artifact@v2
        with:
          name: cloudreve_policy_migrate_linux_arm
          path: release/cloudreve_policy_migrate*linux_arm.*

      - name: Upload binary files (linux_arm64)
        uses: actions/upload-artifact@v2
        with:
          name: cloudreve_policy_migrate_linux_arm64
          path: release/cloudreve_policy_migrate*linux_arm64.*

  release:
    name: Release
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            body: |
              Release
            draft: false
            prerelease: false
